// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentProgress.Infrastructure.Data;

#nullable disable

namespace StudentProgress.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250713195310_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentProgress.Domain.Entities.Progress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AssessmentScore")
                        .HasColumnType("float");

                    b.Property<int>("AssignmentCompleted")
                        .HasColumnType("int");

                    b.Property<double>("CompletionPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("LastActivity")
                        .HasColumnType("datetime2");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("TimeSpent")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("ProgressRecords");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d689a6cc-acd2-4d1d-a975-f117fbf022d6"),
                            AssessmentScore = 88.0,
                            AssignmentCompleted = 10,
                            CompletionPercentage = 85.0,
                            LastActivity = new DateTime(2025, 7, 11, 19, 53, 10, 282, DateTimeKind.Utc).AddTicks(6833),
                            Score = 90.0,
                            StudentId = new Guid("afaa068b-6d34-49d8-b628-e9b5f30986d6"),
                            Subject = "Math",
                            TimeSpent = new TimeSpan(0, 15, 0, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("8440a85f-6905-443c-baf9-9bc9932cd99a"),
                            AssessmentScore = 72.0,
                            AssignmentCompleted = 8,
                            CompletionPercentage = 70.0,
                            LastActivity = new DateTime(2025, 7, 8, 19, 53, 10, 282, DateTimeKind.Utc).AddTicks(6841),
                            Score = 75.0,
                            StudentId = new Guid("61875b10-945c-4216-940e-1d5083ce6090"),
                            Subject = "Science",
                            TimeSpent = new TimeSpan(0, 10, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("StudentProgress.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("afaa068b-6d34-49d8-b628-e9b5f30986d6"),
                            DateOfBirth = new DateTime(2012, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Alice Johnson",
                            Grade = "5"
                        },
                        new
                        {
                            Id = new Guid("61875b10-945c-4216-940e-1d5083ce6090"),
                            DateOfBirth = new DateTime(2010, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Bob Smith",
                            Grade = "7"
                        });
                });

            modelBuilder.Entity("StudentProgress.Domain.Entities.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f2d0a83-1ddb-4a23-a336-8464885d9b1e"),
                            FullName = "Mr. Anderson"
                        });
                });

            modelBuilder.Entity("StudentProgress.Domain.Entities.Progress", b =>
                {
                    b.HasOne("StudentProgress.Domain.Entities.Student", "Student")
                        .WithMany("ProgressRecords")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentProgress.Domain.Entities.Student", b =>
                {
                    b.HasOne("StudentProgress.Domain.Entities.Teacher", null)
                        .WithMany("AssignedStudents")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("StudentProgress.Domain.Entities.Student", b =>
                {
                    b.Navigation("ProgressRecords");
                });

            modelBuilder.Entity("StudentProgress.Domain.Entities.Teacher", b =>
                {
                    b.Navigation("AssignedStudents");
                });
#pragma warning restore 612, 618
        }
    }
}
